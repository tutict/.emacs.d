"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

require("core-js/modules/es.object.to-string.js");

require("core-js/modules/es.promise.js");

require("core-js/modules/es.regexp.to-string.js");

require("core-js/modules/es.array.map.js");

require("regenerator-runtime/runtime.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.startServer = void 0;

var vscode_languageserver_1 = require("vscode-languageserver");

var vscode_languageserver_textdocument_1 = require("vscode-languageserver-textdocument");

var md = require("vscode-markdown-languageservice");

var vscode_uri_1 = require("vscode-uri");

var config_1 = require("./config");

var configuration_1 = require("./configuration");

var diagnostics_1 = require("./languageFeatures/diagnostics");

var logging_1 = require("./logging");

var protocol = require("./protocol");

var workspace_1 = require("./workspace");

function startServer(_x) {
  return _startServer.apply(this, arguments);
}

function _startServer() {
  _startServer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(connection) {
    var documents, notebooks, configurationManager, provider, workspace;
    return regeneratorRuntime.wrap(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            documents = new vscode_languageserver_1.TextDocuments(vscode_languageserver_textdocument_1.TextDocument);
            notebooks = new vscode_languageserver_1.NotebookDocuments(documents);
            configurationManager = new configuration_1.ConfigurationManager(connection);
            connection.onInitialize(function (params) {
              var _params$workspaceFold;

              var parser = new ( /*#__PURE__*/function () {
                function _class() {
                  _classCallCheck(this, _class);

                  this.slugifier = md.githubSlugifier;
                }

                _createClass(_class, [{
                  key: "tokenize",
                  value: function () {
                    var _tokenize = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(document) {
                      return regeneratorRuntime.wrap(function _callee2$(_context2) {
                        while (1) {
                          switch (_context2.prev = _context2.next) {
                            case 0:
                              _context2.next = 2;
                              return connection.sendRequest(protocol.parseRequestType, {
                                uri: document.uri.toString()
                              });

                            case 2:
                              return _context2.abrupt("return", _context2.sent);

                            case 3:
                            case "end":
                              return _context2.stop();
                          }
                        }
                      }, _callee2);
                    }));

                    function tokenize(_x4) {
                      return _tokenize.apply(this, arguments);
                    }

                    return tokenize;
                  }()
                }]);

                return _class;
              }())();
              var config = (0, config_1.getLsConfiguration)({
                markdownFileExtensions: params.initializationOptions.markdownFileExtensions
              });
              var logger = new logging_1.LogFunctionLogger(connection.console.log.bind(connection.console));
              workspace = new workspace_1.VsCodeClientWorkspace(connection, config, documents, notebooks, logger);
              provider = md.createLanguageService({
                workspace: workspace,
                parser: parser,
                logger: logger,
                markdownFileExtensions: config.markdownFileExtensions
              });
              registerCompletionsSupport(connection, documents, provider, configurationManager);
              (0, diagnostics_1.registerValidateSupport)(connection, workspace, provider, configurationManager);
              workspace.workspaceFolders = ((_params$workspaceFold = params.workspaceFolders) !== null && _params$workspaceFold !== void 0 ? _params$workspaceFold : []).map(function (x) {
                return vscode_uri_1.URI.parse(x.uri);
              });
              return {
                capabilities: {
                  diagnosticProvider: {
                    documentSelector: null,
                    identifier: 'markdown',
                    interFileDependencies: true,
                    workspaceDiagnostics: false
                  },
                  completionProvider: {
                    triggerCharacters: ['.', '/', '#']
                  },
                  definitionProvider: true,
                  documentLinkProvider: {
                    resolveProvider: true
                  },
                  documentSymbolProvider: true,
                  foldingRangeProvider: true,
                  renameProvider: {
                    prepareProvider: true
                  },
                  selectionRangeProvider: true,
                  workspaceSymbolProvider: true,
                  workspace: {
                    workspaceFolders: {
                      supported: true,
                      changeNotifications: true
                    }
                  }
                }
              };
            });
            connection.onDocumentLinks( /*#__PURE__*/function () {
              var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(params, token) {
                var document;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                  while (1) {
                    switch (_context3.prev = _context3.next) {
                      case 0:
                        _context3.prev = 0;
                        document = documents.get(params.textDocument.uri);

                        if (!document) {
                          _context3.next = 6;
                          break;
                        }

                        _context3.next = 5;
                        return provider.getDocumentLinks(document, token);

                      case 5:
                        return _context3.abrupt("return", _context3.sent);

                      case 6:
                        _context3.next = 11;
                        break;

                      case 8:
                        _context3.prev = 8;
                        _context3.t0 = _context3["catch"](0);
                        console.error(_context3.t0.stack);

                      case 11:
                        return _context3.abrupt("return", []);

                      case 12:
                      case "end":
                        return _context3.stop();
                    }
                  }
                }, _callee3, null, [[0, 8]]);
              }));

              return function (_x5, _x6) {
                return _ref2.apply(this, arguments);
              };
            }());
            connection.onDocumentLinkResolve( /*#__PURE__*/function () {
              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(link, token) {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                  while (1) {
                    switch (_context4.prev = _context4.next) {
                      case 0:
                        _context4.prev = 0;
                        _context4.next = 3;
                        return provider.resolveDocumentLink(link, token);

                      case 3:
                        return _context4.abrupt("return", _context4.sent);

                      case 6:
                        _context4.prev = 6;
                        _context4.t0 = _context4["catch"](0);
                        console.error(_context4.t0.stack);

                      case 9:
                        return _context4.abrupt("return", undefined);

                      case 10:
                      case "end":
                        return _context4.stop();
                    }
                  }
                }, _callee4, null, [[0, 6]]);
              }));

              return function (_x7, _x8) {
                return _ref3.apply(this, arguments);
              };
            }());
            connection.onDocumentSymbol( /*#__PURE__*/function () {
              var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(params, token) {
                var document;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                  while (1) {
                    switch (_context5.prev = _context5.next) {
                      case 0:
                        _context5.prev = 0;
                        document = documents.get(params.textDocument.uri);

                        if (!document) {
                          _context5.next = 6;
                          break;
                        }

                        _context5.next = 5;
                        return provider.getDocumentSymbols(document, token);

                      case 5:
                        return _context5.abrupt("return", _context5.sent);

                      case 6:
                        _context5.next = 11;
                        break;

                      case 8:
                        _context5.prev = 8;
                        _context5.t0 = _context5["catch"](0);
                        console.error(_context5.t0.stack);

                      case 11:
                        return _context5.abrupt("return", []);

                      case 12:
                      case "end":
                        return _context5.stop();
                    }
                  }
                }, _callee5, null, [[0, 8]]);
              }));

              return function (_x9, _x10) {
                return _ref4.apply(this, arguments);
              };
            }());
            connection.onFoldingRanges( /*#__PURE__*/function () {
              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(params, token) {
                var document;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                  while (1) {
                    switch (_context6.prev = _context6.next) {
                      case 0:
                        _context6.prev = 0;
                        document = documents.get(params.textDocument.uri);

                        if (!document) {
                          _context6.next = 6;
                          break;
                        }

                        _context6.next = 5;
                        return provider.getFoldingRanges(document, token);

                      case 5:
                        return _context6.abrupt("return", _context6.sent);

                      case 6:
                        _context6.next = 11;
                        break;

                      case 8:
                        _context6.prev = 8;
                        _context6.t0 = _context6["catch"](0);
                        console.error(_context6.t0.stack);

                      case 11:
                        return _context6.abrupt("return", []);

                      case 12:
                      case "end":
                        return _context6.stop();
                    }
                  }
                }, _callee6, null, [[0, 8]]);
              }));

              return function (_x11, _x12) {
                return _ref5.apply(this, arguments);
              };
            }());
            connection.onSelectionRanges( /*#__PURE__*/function () {
              var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(params, token) {
                var document;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                  while (1) {
                    switch (_context7.prev = _context7.next) {
                      case 0:
                        _context7.prev = 0;
                        document = documents.get(params.textDocument.uri);

                        if (!document) {
                          _context7.next = 6;
                          break;
                        }

                        _context7.next = 5;
                        return provider.getSelectionRanges(document, params.positions, token);

                      case 5:
                        return _context7.abrupt("return", _context7.sent);

                      case 6:
                        _context7.next = 11;
                        break;

                      case 8:
                        _context7.prev = 8;
                        _context7.t0 = _context7["catch"](0);
                        console.error(_context7.t0.stack);

                      case 11:
                        return _context7.abrupt("return", []);

                      case 12:
                      case "end":
                        return _context7.stop();
                    }
                  }
                }, _callee7, null, [[0, 8]]);
              }));

              return function (_x13, _x14) {
                return _ref6.apply(this, arguments);
              };
            }());
            connection.onWorkspaceSymbol( /*#__PURE__*/function () {
              var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(params, token) {
                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                  while (1) {
                    switch (_context8.prev = _context8.next) {
                      case 0:
                        _context8.prev = 0;
                        _context8.next = 3;
                        return provider.getWorkspaceSymbols(params.query, token);

                      case 3:
                        return _context8.abrupt("return", _context8.sent);

                      case 6:
                        _context8.prev = 6;
                        _context8.t0 = _context8["catch"](0);
                        console.error(_context8.t0.stack);

                      case 9:
                        return _context8.abrupt("return", []);

                      case 10:
                      case "end":
                        return _context8.stop();
                    }
                  }
                }, _callee8, null, [[0, 6]]);
              }));

              return function (_x15, _x16) {
                return _ref7.apply(this, arguments);
              };
            }());
            connection.onReferences( /*#__PURE__*/function () {
              var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(params, token) {
                var document;
                return regeneratorRuntime.wrap(function _callee9$(_context9) {
                  while (1) {
                    switch (_context9.prev = _context9.next) {
                      case 0:
                        _context9.prev = 0;
                        document = documents.get(params.textDocument.uri);

                        if (!document) {
                          _context9.next = 6;
                          break;
                        }

                        _context9.next = 5;
                        return provider.getReferences(document, params.position, params.context, token);

                      case 5:
                        return _context9.abrupt("return", _context9.sent);

                      case 6:
                        _context9.next = 11;
                        break;

                      case 8:
                        _context9.prev = 8;
                        _context9.t0 = _context9["catch"](0);
                        console.error(_context9.t0.stack);

                      case 11:
                        return _context9.abrupt("return", []);

                      case 12:
                      case "end":
                        return _context9.stop();
                    }
                  }
                }, _callee9, null, [[0, 8]]);
              }));

              return function (_x17, _x18) {
                return _ref8.apply(this, arguments);
              };
            }());
            connection.onDefinition( /*#__PURE__*/function () {
              var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(params, token) {
                var document;
                return regeneratorRuntime.wrap(function _callee10$(_context10) {
                  while (1) {
                    switch (_context10.prev = _context10.next) {
                      case 0:
                        _context10.prev = 0;
                        document = documents.get(params.textDocument.uri);

                        if (!document) {
                          _context10.next = 6;
                          break;
                        }

                        _context10.next = 5;
                        return provider.getDefinition(document, params.position, token);

                      case 5:
                        return _context10.abrupt("return", _context10.sent);

                      case 6:
                        _context10.next = 11;
                        break;

                      case 8:
                        _context10.prev = 8;
                        _context10.t0 = _context10["catch"](0);
                        console.error(_context10.t0.stack);

                      case 11:
                        return _context10.abrupt("return", undefined);

                      case 12:
                      case "end":
                        return _context10.stop();
                    }
                  }
                }, _callee10, null, [[0, 8]]);
              }));

              return function (_x19, _x20) {
                return _ref9.apply(this, arguments);
              };
            }());
            connection.onPrepareRename( /*#__PURE__*/function () {
              var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(params, token) {
                var document;
                return regeneratorRuntime.wrap(function _callee11$(_context11) {
                  while (1) {
                    switch (_context11.prev = _context11.next) {
                      case 0:
                        _context11.prev = 0;
                        document = documents.get(params.textDocument.uri);

                        if (!document) {
                          _context11.next = 6;
                          break;
                        }

                        _context11.next = 5;
                        return provider.prepareRename(document, params.position, token);

                      case 5:
                        return _context11.abrupt("return", _context11.sent);

                      case 6:
                        _context11.next = 11;
                        break;

                      case 8:
                        _context11.prev = 8;
                        _context11.t0 = _context11["catch"](0);
                        console.error(_context11.t0.stack);

                      case 11:
                        return _context11.abrupt("return", undefined);

                      case 12:
                      case "end":
                        return _context11.stop();
                    }
                  }
                }, _callee11, null, [[0, 8]]);
              }));

              return function (_x21, _x22) {
                return _ref10.apply(this, arguments);
              };
            }());
            connection.onRenameRequest( /*#__PURE__*/function () {
              var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(params, token) {
                var document, edit;
                return regeneratorRuntime.wrap(function _callee12$(_context12) {
                  while (1) {
                    switch (_context12.prev = _context12.next) {
                      case 0:
                        _context12.prev = 0;
                        document = documents.get(params.textDocument.uri);

                        if (!document) {
                          _context12.next = 8;
                          break;
                        }

                        _context12.next = 5;
                        return provider.getRenameEdit(document, params.position, params.newName, token);

                      case 5:
                        edit = _context12.sent;
                        console.log(JSON.stringify(edit));
                        return _context12.abrupt("return", edit);

                      case 8:
                        _context12.next = 13;
                        break;

                      case 10:
                        _context12.prev = 10;
                        _context12.t0 = _context12["catch"](0);
                        console.error(_context12.t0.stack);

                      case 13:
                        return _context12.abrupt("return", undefined);

                      case 14:
                      case "end":
                        return _context12.stop();
                    }
                  }
                }, _callee12, null, [[0, 10]]);
              }));

              return function (_x23, _x24) {
                return _ref11.apply(this, arguments);
              };
            }());
            connection.onRequest(protocol.getReferencesToFileInWorkspace, /*#__PURE__*/function () {
              var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(params, token) {
                return regeneratorRuntime.wrap(function _callee13$(_context13) {
                  while (1) {
                    switch (_context13.prev = _context13.next) {
                      case 0:
                        _context13.prev = 0;
                        _context13.next = 3;
                        return provider.getFileReferences(vscode_uri_1.URI.parse(params.uri), token);

                      case 3:
                        return _context13.abrupt("return", _context13.sent);

                      case 6:
                        _context13.prev = 6;
                        _context13.t0 = _context13["catch"](0);
                        console.error(_context13.t0.stack);

                      case 9:
                        return _context13.abrupt("return", undefined);

                      case 10:
                      case "end":
                        return _context13.stop();
                    }
                  }
                }, _callee13, null, [[0, 6]]);
              }));

              return function (_x25, _x26) {
                return _ref12.apply(this, arguments);
              };
            }());
            documents.listen(connection);
            notebooks.listen(connection);
            connection.listen();

          case 18:
          case "end":
            return _context14.stop();
        }
      }
    }, _callee14);
  }));
  return _startServer.apply(this, arguments);
}

exports.startServer = startServer;

function registerCompletionsSupport(connection, documents, ls, config) {
  // let registration: Promise<IDisposable> | undefined;
  function update() {
    // TODO: client still makes the request in this case. Figure our how to properly unregister.
    return; // const settings = config.getSettings();
    // if (settings?.markdown.suggest.paths.enabled) {
    // 	if (!registration) {
    // 		registration = connection.client.register(CompletionRequest.type);
    // 	}
    // } else {
    // 	registration?.then(x => x.dispose());
    // 	registration = undefined;
    // }
  }

  connection.onCompletion( /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(params, token) {
      var settings, document;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              settings = config.getSettings();

              if (settings !== null && settings !== void 0 && settings.markdown.suggest.paths.enabled) {
                _context.next = 4;
                break;
              }

              return _context.abrupt("return", []);

            case 4:
              document = documents.get(params.textDocument.uri);

              if (!document) {
                _context.next = 9;
                break;
              }

              _context.next = 8;
              return ls.getCompletionItems(document, params.position, params.context, token);

            case 8:
              return _context.abrupt("return", _context.sent);

            case 9:
              _context.next = 14;
              break;

            case 11:
              _context.prev = 11;
              _context.t0 = _context["catch"](0);
              console.error(_context.t0.stack);

            case 14:
              return _context.abrupt("return", []);

            case 15:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[0, 11]]);
    }));

    return function (_x2, _x3) {
      return _ref.apply(this, arguments);
    };
  }());
  update();
  return config.onDidChangeConfiguration(function () {
    return update();
  });
}